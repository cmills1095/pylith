[pylithapp]

# ----------------------------------------------------------------------
# journal
# ----------------------------------------------------------------------
[pylithapp.journal.info]
isotropicpowerlaw = 1

# ----------------------------------------------------------------------
# solution
# ----------------------------------------------------------------------
[pylithapp.problem]
initial_dt = 5.0*year
start_time = 0.0*year
end_time = 500.0*year
normalizer.relaxation_time = 50.0*year

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem]
materials = [viscomat]

[pylithapp.problem.materials]
viscomat.bulk_rheology = pylith.materials.IsotropicPowerLaw

[pylithapp.problem.materials.viscomat]
label = Power-law viscoelastic material
id = 1
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.label = Power-law viscoelastic properties
db_auxiliary_field.iohandler.filename = mat_powerlaw_norefstate.spatialdb

auxiliary_subfields.density.basis_order = 0

derived_subfields.cauchy_strain.basis_order = 1
derived_subfields.cauchy_stress.basis_order = 1

observers.observer.field_filter = pylith.meshio.FieldFilterProject
observers.observer.field_filter.basis_order = 0
observers.observer.data_fields = [cauchy_stress, cauchy_strain, displacement, viscous_strain, stress]

[pylithapp.problem.materials.viscomat.bulk_rheology]
# use_reference_state = True
use_reference_state = False

auxiliary_subfields.bulk_modulus.basis_order = 0
auxiliary_subfields.shear_modulus.basis_order = 0
auxiliary_subfields.power_law_reference_strain_rate.basis_order = 0
auxiliary_subfields.power_law_reference_stress.basis_order = 0
auxiliary_subfields.power_law_exponent.basis_order = 0
auxiliary_subfields.viscous_strain.basis_order = 1
auxiliary_subfields.stress.basis_order = 1

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set bc to an array of 6 boundary conditions:
bc = [bc_xneg,bc_xpos,bc_yneg,bc_ypos,bc_zneg, bc_zpos]

bc.bc_xneg = pylith.bc.DirichletTimeDependent
bc.bc_xpos = pylith.bc.DirichletTimeDependent
bc.bc_yneg = pylith.bc.DirichletTimeDependent
bc.bc_ypos = pylith.bc.DirichletTimeDependent
bc.bc_zneg = pylith.bc.DirichletTimeDependent
bc.bc_zpos = pylith.bc.NeumannTimeDependent

[pylithapp.problem.bc.bc_xneg]
constrained_dof = [0]
label = boundary_xneg
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -x

auxiliary_subfields.initial_amplitude.basis_order = 1

observers.observer.field_filter = pylith.meshio.FieldFilterProject
observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_yneg]
constrained_dof = [1]
label = boundary_yneg
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -y

auxiliary_subfields.initial_amplitude.basis_order = 1

observers.observer.field_filter = pylith.meshio.FieldFilterProject
observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_zneg]
constrained_dof = [2]
label = boundary_zneg
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on -z

auxiliary_subfields.initial_amplitude.basis_order = 1

observers.observer.field_filter = pylith.meshio.FieldFilterProject
observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_xpos]
constrained_dof = [0]
label = boundary_xpos
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +x

auxiliary_subfields.initial_amplitude.basis_order = 1

observers.observer.field_filter = pylith.meshio.FieldFilterProject
observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_ypos]
constrained_dof = [1]
label = boundary_ypos
db_auxiliary_field = pylith.bc.ZeroDB
db_auxiliary_field.label = Dirichlet BC on +y

auxiliary_subfields.initial_amplitude.basis_order = 1

observers.observer.field_filter = pylith.meshio.FieldFilterProject
observers.observer.data_fields = [displacement]

[pylithapp.problem.bc.bc_zpos]
label = boundary_zpos
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.label = Neumann BC on +z
db_auxiliary_field.values = [initial_amplitude_tangential_1, initial_amplitude_tangential_2,  initial_amplitude_normal]
db_auxiliary_field.data = [0.0*Pa, 0.0*Pa, -1000.0*MPa]

auxiliary_subfields.initial_amplitude.basis_order = 1

observers.observer.field_filter = pylith.meshio.FieldFilterProject
observers.observer.data_fields = [displacement]


# End of file
